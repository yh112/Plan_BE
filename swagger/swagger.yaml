openapi: 3.0.0
info:
  title: Plan Management API
  version: 1.0.0
  description: 주간 계획표 관리 서비스의 API 문서입니다.
servers:
  - url: http://localhost:4000/api
    description: Local server

paths:
  /auth/signup:
    post:
      summary: "회원가입"
      description: "새로운 사용자를 등록합니다."
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "test_user"
                password:
                  type: string
                  example: "123456"
                user_name:
                  type: string
                  example: "홍길동"
                number:
                  type: string
                  example: "01012345678"
                role:
                  type: string
                  example: "사원"
      responses:
        "201":
          description: "회원가입 성공"
        "400":
          description: "이미 존재하는 아이디"
        "500":
          description: "서버 오류"

  /auth/login:
    post:
      summary: "로그인"
      description: "사용자가 아이디와 비밀번호로 로그인합니다."
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "test_user"
                password:
                  type: string
                  example: "123456"
      responses:
        "200":
          description: "로그인 성공"
        "400":
          description: "잘못된 요청"
        "500":
          description: "서버 오류"

  /auth/logout:
    post:
      summary: "로그아웃"
      tags: [Auth]
      responses:
        "200":
          description: "로그아웃 완료"
        "500":
          description: "서버 오류"

  /folders:
    get:
      summary: "폴더 목록 조회"
      tags: [Folders]
      responses:
        "200":
          description: "폴더 목록 조회 성공"
        "500":
          description: "서버 오류"
    post:
      summary: "폴더 추가"
      tags: [Folders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder_name:
                  type: string
                  example: "업무폴더"
      responses:
        "201":
          description: "폴더 추가 성공"
        "400":
          description: "잘못된 요청"
        "500":
          description: "서버 오류"

  /folders/{fid}:
    put:
      summary: "폴더 이름 수정"
      tags: [Folders]
      parameters:
        - in: path
          name: fid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder_name:
                  type: string
      responses:
        "200":
          description: "폴더 수정 완료"
        "500":
          description: "서버 오류"

  /history/undo:
    post:
      summary: "마지막 작업 되돌리기 (Undo)"
      tags: [History]
      responses:
        "200":
          description: "Undo 성공"
        "500":
          description: "서버 오류"

  /history/redo:
    post:
      summary: "되돌리기 작업 다시 실행 (Redo)"
      tags: [History]
      responses:
        "200":
          description: "Redo 성공"
        "500":
          description: "서버 오류"

tags:
  - name: Auth
    description: 사용자 인증 관련 API
  - name: Folders
    description: 폴더 관리 API
  - name: History
    description: Undo/Redo 이력 관리 API
